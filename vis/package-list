$dokka.format:html
$dokka.linkExtension:html
$dokka.location:ktx.scene2d.vis$addTabContentsTo(com.kotcrab.vis.ui.widget.tabbedpane.TabbedPane, com.badlogic.gdx.scenes.scene2d.Group)ktx.scene2d.vis/com.kotcrab.vis.ui.widget.tabbedpane.-tabbed-pane/add-tab-contents-to.html
$dokka.location:ktx.scene2d.vis$addTabContentsTo(com.kotcrab.vis.ui.widget.tabbedpane.TabbedPane, com.badlogic.gdx.scenes.scene2d.ui.Container((com.badlogic.gdx.scenes.scene2d.Actor)))ktx.scene2d.vis/com.kotcrab.vis.ui.widget.tabbedpane.-tabbed-pane/add-tab-contents-to.html
$dokka.location:ktx.scene2d.vis$addTabContentsTo(com.kotcrab.vis.ui.widget.tabbedpane.TabbedPane, com.badlogic.gdx.scenes.scene2d.ui.Table)ktx.scene2d.vis/com.kotcrab.vis.ui.widget.tabbedpane.-tabbed-pane/add-tab-contents-to.html
$dokka.location:ktx.scene2d.vis$basicColorPicker(ktx.scene2d.KWidget((ktx.scene2d.vis.basicColorPicker.S)), kotlin.String, kotlin.Function2((ktx.scene2d.vis.KBasicColorPicker, ktx.scene2d.vis.basicColorPicker.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/basic-color-picker.html
$dokka.location:ktx.scene2d.vis$busyBar(ktx.scene2d.KWidget((ktx.scene2d.vis.busyBar.S)), kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.BusyBar, ktx.scene2d.vis.busyBar.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/busy-bar.html
$dokka.location:ktx.scene2d.vis$buttonBar(ktx.scene2d.KWidget((ktx.scene2d.vis.buttonBar.S)), kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisTable, ktx.scene2d.vis.buttonBar.S, kotlin.Unit)), kotlin.Function1((com.kotcrab.vis.ui.widget.ButtonBar, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/button-bar.html
$dokka.location:ktx.scene2d.vis$collapsible(ktx.scene2d.KWidget((ktx.scene2d.vis.collapsible.S)), kotlin.Boolean, kotlin.Function2((ktx.scene2d.vis.KCollapsible, ktx.scene2d.vis.collapsible.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/collapsible.html
$dokka.location:ktx.scene2d.vis$dragPane(ktx.scene2d.KWidget((ktx.scene2d.vis.dragPane.S)), kotlin.Function2((ktx.scene2d.vis.KDragPane, ktx.scene2d.vis.dragPane.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/drag-pane.html
$dokka.location:ktx.scene2d.vis$extendedColorPicker(ktx.scene2d.KWidget((ktx.scene2d.vis.extendedColorPicker.S)), kotlin.String, kotlin.Function2((ktx.scene2d.vis.KExtendedColorPicker, ktx.scene2d.vis.extendedColorPicker.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/extended-color-picker.html
$dokka.location:ktx.scene2d.vis$floatingGroup(ktx.scene2d.KWidget((ktx.scene2d.vis.floatingGroup.S)), kotlin.Function2((ktx.scene2d.vis.KFloatingGroup, ktx.scene2d.vis.floatingGroup.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/floating-group.html
$dokka.location:ktx.scene2d.vis$gridGroup(ktx.scene2d.KWidget((ktx.scene2d.vis.gridGroup.S)), kotlin.Float, kotlin.Float, kotlin.Function2((ktx.scene2d.vis.KGridGroup, ktx.scene2d.vis.gridGroup.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/grid-group.html
$dokka.location:ktx.scene2d.vis$highlightTextArea(ktx.scene2d.KWidget((ktx.scene2d.vis.highlightTextArea.S)), kotlin.String, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.HighlightTextArea, ktx.scene2d.vis.highlightTextArea.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/highlight-text-area.html
$dokka.location:ktx.scene2d.vis$horizontalCollapsible(ktx.scene2d.KWidget((ktx.scene2d.vis.horizontalCollapsible.S)), kotlin.Boolean, kotlin.Function2((ktx.scene2d.vis.KHorizontalCollapsible, ktx.scene2d.vis.horizontalCollapsible.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/horizontal-collapsible.html
$dokka.location:ktx.scene2d.vis$horizontalFlowGroup(ktx.scene2d.KWidget((ktx.scene2d.vis.horizontalFlowGroup.S)), kotlin.Float, kotlin.Function2((ktx.scene2d.vis.KHorizontalFlowGroup, ktx.scene2d.vis.horizontalFlowGroup.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/horizontal-flow-group.html
$dokka.location:ktx.scene2d.vis$linkLabel(ktx.scene2d.KWidget((ktx.scene2d.vis.linkLabel.S)), kotlin.CharSequence, kotlin.CharSequence, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.LinkLabel, ktx.scene2d.vis.linkLabel.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/link-label.html
$dokka.location:ktx.scene2d.vis$listView(ktx.scene2d.KWidget((kotlin.Any)), com.kotcrab.vis.ui.util.adapter.ListAdapter((ktx.scene2d.vis.listView.I)), kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.ListView((ktx.scene2d.vis.listView.I)), kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/list-view.html
$dokka.location:ktx.scene2d.vis$menu(com.kotcrab.vis.ui.widget.MenuBar, kotlin.String, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.PopupMenu, kotlin.Unit)))ktx.scene2d.vis/com.kotcrab.vis.ui.widget.-menu-bar/menu.html
$dokka.location:ktx.scene2d.vis$menuBar(ktx.scene2d.KWidget((ktx.scene2d.vis.menuBar.S)), kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.MenuBar, ktx.scene2d.vis.menuBar.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/menu-bar.html
$dokka.location:ktx.scene2d.vis$menuItem(com.kotcrab.vis.ui.widget.PopupMenu, kotlin.String, com.badlogic.gdx.scenes.scene2d.ui.Image, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.MenuItem, kotlin.Unit)))ktx.scene2d.vis/com.kotcrab.vis.ui.widget.-popup-menu/menu-item.html
$dokka.location:ktx.scene2d.vis$menuItem(com.kotcrab.vis.ui.widget.PopupMenu, kotlin.String, com.badlogic.gdx.scenes.scene2d.utils.Drawable, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.MenuItem, kotlin.Unit)))ktx.scene2d.vis/com.kotcrab.vis.ui.widget.-popup-menu/menu-item.html
$dokka.location:ktx.scene2d.vis$menuItem(com.kotcrab.vis.ui.widget.PopupMenu, kotlin.String, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.MenuItem, kotlin.Unit)))ktx.scene2d.vis/com.kotcrab.vis.ui.widget.-popup-menu/menu-item.html
$dokka.location:ktx.scene2d.vis$menuItem(com.kotcrab.vis.ui.widget.PopupMenu, kotlin.String, kotlin.String, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.MenuItem, kotlin.Unit)))ktx.scene2d.vis/com.kotcrab.vis.ui.widget.-popup-menu/menu-item.html
$dokka.location:ktx.scene2d.vis$multiSplitPane(ktx.scene2d.KWidget((ktx.scene2d.vis.multiSplitPane.S)), kotlin.Boolean, kotlin.String, kotlin.Function2((ktx.scene2d.vis.KMultiSplitPane, ktx.scene2d.vis.multiSplitPane.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/multi-split-pane.html
$dokka.location:ktx.scene2d.vis$popupMenu(ktx.scene2d.scene2d, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.PopupMenu, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.scene2d/popup-menu.html
$dokka.location:ktx.scene2d.vis$scrollableTextArea(ktx.scene2d.KWidget((ktx.scene2d.vis.scrollableTextArea.S)), kotlin.String, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.ScrollableTextArea, ktx.scene2d.vis.scrollableTextArea.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/scrollable-text-area.html
$dokka.location:ktx.scene2d.vis$separator(ktx.scene2d.KWidget((ktx.scene2d.vis.separator.S)), kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.Separator, ktx.scene2d.vis.separator.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/separator.html
$dokka.location:ktx.scene2d.vis$spinner(ktx.scene2d.KWidget((ktx.scene2d.vis.spinner.S)), kotlin.String, com.kotcrab.vis.ui.widget.spinner.SpinnerModel, kotlin.String, kotlin.Function2((ktx.scene2d.vis.KSpinner, ktx.scene2d.vis.spinner.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/spinner.html
$dokka.location:ktx.scene2d.vis$subMenu(com.kotcrab.vis.ui.widget.MenuItem, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.PopupMenu, kotlin.Unit)))ktx.scene2d.vis/com.kotcrab.vis.ui.widget.-menu-item/sub-menu.html
$dokka.location:ktx.scene2d.vis$tabbedPane(ktx.scene2d.KWidget((ktx.scene2d.vis.tabbedPane.S)), kotlin.String, kotlin.Function2((ktx.scene2d.vis.KTabbedPane, ktx.scene2d.vis.tabbedPane.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/tabbed-pane.html
$dokka.location:ktx.scene2d.vis$toastTable(ktx.scene2d.RootWidget, kotlin.Boolean, kotlin.Function1((ktx.scene2d.vis.KToastTable, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-root-widget/toast-table.html
$dokka.location:ktx.scene2d.vis$verticalFlowGroup(ktx.scene2d.KWidget((ktx.scene2d.vis.verticalFlowGroup.S)), kotlin.Float, kotlin.Function2((ktx.scene2d.vis.KVerticalFlowGroup, ktx.scene2d.vis.verticalFlowGroup.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vertical-flow-group.html
$dokka.location:ktx.scene2d.vis$visCheckBox(ktx.scene2d.KWidget((ktx.scene2d.vis.visCheckBox.S)), kotlin.String, kotlin.String, kotlin.Function2((ktx.scene2d.vis.KVisCheckBox, ktx.scene2d.vis.visCheckBox.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-check-box.html
$dokka.location:ktx.scene2d.vis$visDialog(ktx.scene2d.RootWidget, kotlin.String, kotlin.String, kotlin.Function1((ktx.scene2d.vis.KVisDialog, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-root-widget/vis-dialog.html
$dokka.location:ktx.scene2d.vis$visImage(ktx.scene2d.KWidget((ktx.scene2d.vis.visImage.S)), com.badlogic.gdx.graphics.Texture, kotlin.Function2((com.kotcrab.vis.ui.widget.VisImage, ktx.scene2d.vis.visImage.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-image.html
$dokka.location:ktx.scene2d.vis$visImage(ktx.scene2d.KWidget((ktx.scene2d.vis.visImage.S)), com.badlogic.gdx.graphics.g2d.NinePatch, kotlin.Function2((com.kotcrab.vis.ui.widget.VisImage, ktx.scene2d.vis.visImage.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-image.html
$dokka.location:ktx.scene2d.vis$visImage(ktx.scene2d.KWidget((ktx.scene2d.vis.visImage.S)), com.badlogic.gdx.graphics.g2d.TextureRegion, kotlin.Function2((com.kotcrab.vis.ui.widget.VisImage, ktx.scene2d.vis.visImage.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-image.html
$dokka.location:ktx.scene2d.vis$visImage(ktx.scene2d.KWidget((ktx.scene2d.vis.visImage.S)), com.badlogic.gdx.scenes.scene2d.utils.Drawable, com.badlogic.gdx.utils.Scaling, kotlin.Int, kotlin.Function2((com.kotcrab.vis.ui.widget.VisImage, ktx.scene2d.vis.visImage.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-image.html
$dokka.location:ktx.scene2d.vis$visImage(ktx.scene2d.KWidget((ktx.scene2d.vis.visImage.S)), kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisImage, ktx.scene2d.vis.visImage.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-image.html
$dokka.location:ktx.scene2d.vis$visImageButton(ktx.scene2d.KWidget((ktx.scene2d.vis.visImageButton.S)), kotlin.String, kotlin.Function2((ktx.scene2d.vis.KVisImageButton, ktx.scene2d.vis.visImageButton.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-image-button.html
$dokka.location:ktx.scene2d.vis$visImageTextButton(ktx.scene2d.KWidget((ktx.scene2d.vis.visImageTextButton.S)), kotlin.String, kotlin.String, kotlin.Function2((ktx.scene2d.vis.KVisImageTextButton, ktx.scene2d.vis.visImageTextButton.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-image-text-button.html
$dokka.location:ktx.scene2d.vis$visLabel(ktx.scene2d.KWidget((ktx.scene2d.vis.visLabel.S)), kotlin.CharSequence, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisLabel, ktx.scene2d.vis.visLabel.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-label.html
$dokka.location:ktx.scene2d.vis$visList(ktx.scene2d.KWidget((kotlin.Any)), kotlin.String, kotlin.Function1((ktx.scene2d.vis.KVisList((ktx.scene2d.vis.visList.I)), kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-list.html
$dokka.location:ktx.scene2d.vis$visListOf(ktx.scene2d.KWidget((kotlin.Any)), com.badlogic.gdx.utils.Array((ktx.scene2d.vis.visListOf.I)), kotlin.String)ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-list-of.html
$dokka.location:ktx.scene2d.vis$visProgressBar(ktx.scene2d.KWidget((ktx.scene2d.vis.visProgressBar.S)), kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Boolean, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisProgressBar, ktx.scene2d.vis.visProgressBar.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-progress-bar.html
$dokka.location:ktx.scene2d.vis$visRadioButton(ktx.scene2d.KWidget((ktx.scene2d.vis.visRadioButton.S)), kotlin.String, kotlin.String, kotlin.Function2((ktx.scene2d.vis.KVisRadioButton, ktx.scene2d.vis.visRadioButton.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-radio-button.html
$dokka.location:ktx.scene2d.vis$visScrollPane(ktx.scene2d.KWidget((ktx.scene2d.vis.visScrollPane.S)), kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisScrollPane, ktx.scene2d.vis.visScrollPane.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-scroll-pane.html
$dokka.location:ktx.scene2d.vis$visSelectBox(ktx.scene2d.KWidget((kotlin.Any)), kotlin.String, kotlin.Function1((ktx.scene2d.vis.KVisSelectBox((ktx.scene2d.vis.visSelectBox.I)), kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-select-box.html
$dokka.location:ktx.scene2d.vis$visSelectBoxOf(ktx.scene2d.KWidget((kotlin.Any)), com.badlogic.gdx.utils.Array((ktx.scene2d.vis.visSelectBoxOf.I)), kotlin.String)ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-select-box-of.html
$dokka.location:ktx.scene2d.vis$visSlider(ktx.scene2d.KWidget((ktx.scene2d.vis.visSlider.S)), kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Boolean, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisSlider, ktx.scene2d.vis.visSlider.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-slider.html
$dokka.location:ktx.scene2d.vis$visSplitPane(ktx.scene2d.KWidget((ktx.scene2d.vis.visSplitPane.S)), kotlin.Boolean, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisSplitPane, ktx.scene2d.vis.visSplitPane.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-split-pane.html
$dokka.location:ktx.scene2d.vis$visTable(ktx.scene2d.KWidget((ktx.scene2d.vis.visTable.S)), kotlin.Boolean, kotlin.Function2((ktx.scene2d.vis.KVisTable, ktx.scene2d.vis.visTable.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-table.html
$dokka.location:ktx.scene2d.vis$visTextArea(ktx.scene2d.KWidget((ktx.scene2d.vis.visTextArea.S)), kotlin.String, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisTextArea, ktx.scene2d.vis.visTextArea.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-text-area.html
$dokka.location:ktx.scene2d.vis$visTextButton(ktx.scene2d.KWidget((ktx.scene2d.vis.visTextButton.S)), kotlin.String, kotlin.String, kotlin.Function2((ktx.scene2d.vis.KVisTextButton, ktx.scene2d.vis.visTextButton.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-text-button.html
$dokka.location:ktx.scene2d.vis$visTextField(ktx.scene2d.KWidget((ktx.scene2d.vis.visTextField.S)), kotlin.String, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisTextField, ktx.scene2d.vis.visTextField.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-text-field.html
$dokka.location:ktx.scene2d.vis$visTextTooltip(com.badlogic.gdx.scenes.scene2d.Actor, kotlin.CharSequence, kotlin.Int, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.Tooltip, kotlin.Unit)))ktx.scene2d.vis/com.badlogic.gdx.scenes.scene2d.-actor/vis-text-tooltip.html
$dokka.location:ktx.scene2d.vis$visTooltip(com.badlogic.gdx.scenes.scene2d.Actor, com.badlogic.gdx.scenes.scene2d.Actor, kotlin.String, kotlin.Function1((com.kotcrab.vis.ui.widget.Tooltip, kotlin.Unit)))ktx.scene2d.vis/com.badlogic.gdx.scenes.scene2d.-actor/vis-tooltip.html
$dokka.location:ktx.scene2d.vis$visTree(ktx.scene2d.KWidget((ktx.scene2d.vis.visTree.S)), kotlin.String, kotlin.Function2((ktx.scene2d.vis.KVisTree, ktx.scene2d.vis.visTree.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-tree.html
$dokka.location:ktx.scene2d.vis$visValidatableTextField(ktx.scene2d.KWidget((ktx.scene2d.vis.visValidatableTextField.S)), kotlin.String, kotlin.String, kotlin.Function2((com.kotcrab.vis.ui.widget.VisValidatableTextField, ktx.scene2d.vis.visValidatableTextField.S, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-k-widget/vis-validatable-text-field.html
$dokka.location:ktx.scene2d.vis$visWindow(ktx.scene2d.RootWidget, kotlin.String, kotlin.String, kotlin.Function1((ktx.scene2d.vis.KVisWindow, kotlin.Unit)))ktx.scene2d.vis/ktx.scene2d.-root-widget/vis-window.html
ktx.scene2d.vis
